#Maintained by: RehabMan for: Intel DH67xx

#
# This set of patches is the main set. Apply this set, plus dh67gd_igpu.txt if you
# are using integrated HD3000 graphics.  Apply dh67gd_lion.hdef.txt after all others
# but only if using Lion.
#

# fix compilation errors in native dh67gd DSDT...


# rehabman:
# 0xFFDFFFFF - 0x02000000 + 1 is 0xFDE00000, not 0xFDFC0000

into device label PCI0 code_regex (DWordMemory\s*\([^\n]*\s*0x00000000,[^\n]*\s*0x02000000,[^\n]*\s*0xFFDFFFFF,[^\n]*\s*0x00000000,[^\n]*\s*)0xFDFC0000,([^\n]*\s*,,\s_Y06,\sAddressRangeMemory,\sTypeStatic\)) replace_matched
begin
%10xFDE00000,%2
end;

# rehabman:
# _FDC is supposed to return a Buffer, not a Package
# commented out for now, because device FDC just gets removed later

#into device label FDC code_regex (Name\s*\(_FDE,\s*)Package(\s*\(0x05\)[^)]*\)) replace_matched
#begin
#%1Buffer%2
#end;

# rehabman:
# _PLD is supposed to return a variable length Package of Buffers
into_all all code_regex (Name\s*\(_PLD,\s*)Buffer(\s\(0x10\)[^\)]*) replaceall_matched
begin
%1Package() { Buffer%2}
end;

# rehabman
# Not strictly necessary, but...
into_all all code_regex _T_0 replaceall_matched begin T_0 end;
into_all all code_regex _T_1 replaceall_matched begin T_1 end;
into_all all code_regex _T_2 replaceall_matched begin T_2 end;
into_all all code_regex _T_3 replaceall_matched begin T_3 end;
into_all all code_regex _T_4 replaceall_matched begin T_4 end;

into_all all code_regex Or\s\(0x03,\sPARM\) replaceall_matched begin Or (PARM, 0x03, PARM) end;

# that is it for syntax, rest are functional...


# rehabman:
# make IOKS method in PS2M device do nothing
# this method causes long delays on sleep... it seems to be doing
# something with a PS2 mouse, which of course this board doesn't even
# have a PS2 port!!!...

#into method label IOKS replace_content
#begin
#   // nothing
#end;

# or... since there is no PS2 port on this board, remove all related 
# code/references and devices

into device name_hid PNP0303 remove_entry;
into device name_hid PNP0F03 remove_entry;
into method label SIOS code_regex IOKS\s+\(Arg0\) remove_matched;
into method label PTS code_regex \\_SB\.PCI0\.SBRG\.IOKS\s+\(Arg0\) remove_matched;
into method label IOKH remove_entry;
into method label SIOH remove_entry;
into method label _L1D code_regex \\_SB\.PCI0\.SBRG\.SIOH\s+\(\) remove_matched;
into method label _L08 code_regex \\_SB\.PCI0\.SBRG\.SIOH\s+\(\) remove_matched;
into method label PS2M._PRW remove_entry;
into method label PS2K._PRW remove_entry;
into method label IOKS remove_entry;

# Change method _PTS where Arg0 is 0x05 (shutdown)
# (from Shutdown Intel.txt)
into method label _PTS code_regex_not If\s*\(LEqual\s*\(Arg0,\s*0x05\)\) code_regex ^((?:.|\n)*)$ replace_matched
begin
        If (LEqual (Arg0, 0x05))\n
        {\n
            Store (Zero, SLPE)\n
            Sleep (0x10)\n
        }\n
        Else\n
        {\n
%1
        }
end;

# rehabman
# To workaround bug in AppleACPIPlatform 10.8.5 and 10.9

into method label _WAK code_regex \s*(.?WAK\s+\([^)]*\)) replace_matched
begin
If (LOr(LLess(Arg0,1),LGreater(Arg0,5))) { Store(3,Arg0) }\n
%1
end;

into definitionblock code_regex . code_regex_not OperationRegion\s*\(PMRS insert
begin
OperationRegion (PMRS, SystemIO, 0x0430, One)\n
Field (PMRS, ByteAcc, NoLock, Preserve)\n
{\n
        ,   4, \n
    SLPE,   1\n
}
end;

# rehabman:
# For compatibility to RevoGirl style SSDT
into definitionblock code_regex . insert
begin
Scope (_PR)\n
{\n
    Processor (CPU0, 0x00, 0x00000410, 0x06) {}\n
    Processor (CPU1, 0x01, 0x00000410, 0x06) {}\n
    Processor (CPU2, 0x02, 0x00000410, 0x06) {}\n
    Processor (CPU3, 0x03, 0x00000410, 0x06) {}\n
    Processor (CPU4, 0x04, 0x00000410, 0x06) {}\n
    Processor (CPU5, 0x05, 0x00000410, 0x06) {}\n
    Processor (CPU6, 0x06, 0x00000410, 0x06) {}\n
    Processor (CPU7, 0x07, 0x00000410, 0x06) {}\n
}\n
end;

into_all scope label _PR code_regex Alias\s\([^\n]+\n removeall_matched;
into_all scope label \_PR code_regex Alias\s\([^\n]+\n removeall_matched;

into device label PWRB code_regex (Name\s\()_HID(\,\sEisaId\s\(\"PNP0C0C\"\)\)) replace_matched begin %1_CID%2 end;
into device name_hid PNP0000 code_regex IRQNoFlags\s\(\)\n\s+\{(\d+)\} remove_matched;
into device name_hid PNP0100 code_regex IRQNoFlags\s\(\)\n\s+\{(\d+)\} remove_matched;
into device name_hid PNP0B00 code_regex IRQNoFlags\s\(\)\n\s+\{(\d+)\} remove_matched;
into device name_hid PNP0103 code_regex_not IRQNoFlags code_regex Name\s\(([^,]+),\sResourceTemplate\s\(\)\n\s+\{((?:.|\n)*)\}\) replace_matched
begin
Name (%1, ResourceTemplate ()\n
{\n
    IRQNoFlags () { 0, 8 }\n
%2
})
end;

# rehabman:
# This patch is not necessary.  8086:1c49 is the native ID
#
#into method label _DSM parent_adr 0x001F0000 remove_entry;
#into device name_adr 0x001F0000 insert
#begin
#Method (_DSM, 4, NotSerialized)\n
#{\n
#    If (LEqual (Arg2, Zero)) { Return (Buffer() { 0x03 } ) }\n
#    Return (Package()\n
#    {\n
#        "name", "pci8086,1c49",\n
#        "device-id", Buffer() { 0x49, 0x1c, 0x00, 0x00 }\n
#    })\n
#}
#end;

into_all all code_regex Name\s\(RPMV,\sPackage\s\(0x00\) replaceall_matched
begin
Name (RPMV, Package (zero)
end;

into device label SPKR remove_entry;
into device label FDC remove_entry;
into device label FDC0 remove_entry;
into device label LPT1 remove_entry;
into device label LPTE remove_entry;
into device label ECP1 remove_entry;
into device label MEM remove_entry;
into device label ^^RMEM remove_entry;
into device label IDE1 set_label begin SATA end;
into device name_hid PNP0B00 code_regex (IO\s\((?:\s*[^,]+,\s*(?:\/\/\s.*)?\s*\n)+\s*)(\dx\d+)(,\s*(?:\/\/\s.*)?\s*\n\s*\)) replace_matched begin %10x02%3 end;
into device name_adr 0x001B0000 set_label begin HDEF end;
into_all all code_regex AZAL replaceall_matched begin HDEF end;

into device name_adr 0x001B0000 parent_label PCI0 remove_entry;
into device label PCI0 insert
begin
Device (HDEF)\n
{\n
    Name (_ADR, 0x001B0000)\n
    Name (_PRW, Package() { 0x0D, 0x05 })\n
    Method (_DSM, 4, NotSerialized)\n
    {\n
        If (LEqual (Arg2, Zero)) { Return (Buffer() { 0x03 } ) }\n
        Return (Package()\n
        {\n
            "layout-id", Buffer() { 0x01, 0x00, 0x00, 0x00 },\n
            "PinConfigurations", Buffer() {},\n
            //"MaximumBootBeepVolume", 77,\n
            //REVIEW: for this board, better without...
            //"hda-gfx", Buffer() { "onboard-1" },\n
        })\n
    }\n
}
end;

# Add the missing MCHC device
into device label MCHC parent_label PCI0 remove_entry;
into device label PCI0 insert begin
Device (MCHC)\n
{\n
	Name (_ADR, Zero)\n
}
end;

# this was original, but this patch replaced by one at the top of the file...
#into method label _PTS code_regex_not If\s\(LEqual\s\(Arg0,\s0x05\)\) code_regex ^((?:.|\n)*)$ replace_matched
#begin
#        If (LEqual (Arg0, 0x05)) {}\n
#        Else\n
#        {\n
#%1
#        }
#end;

into method label _STA parent_hid PNP0103 remove_entry;
into device name_hid PNP0103 insert
begin
Name (_STA, 0x0F)\n
end;

into method label _CRS parent_hid PNP0103 remove_entry;
into device name_hid PNP0103 insert
begin
Method (_CRS, 0, NotSerialized)\n
{\n
    Return (CRS)\n
}
end;

into_all all code_regex (Acquire\s\(MUT0,\s0x)....\) replace_matched begin %1FFFF) end;
into method label SIOS code_regex Return\s\(Zero\) remove_matched;
into method label SIOS insert begin Return (Zero) end;
into method label STM code_regex Return\s\(Zero\) remove_matched;
into method label STM insert begin Return (Zero) end;

# rehabman
# make GBE (Ethernet) built-in (REVIEW: doesn't work... mystery)
#into method label _DSM parent_adr 0x00190000 remove_entry;
#into device name_adr 0x00190000 insert
#begin
#Method (_DSM, 4, NotSerialized)\n
#{\n
#    If (LEqual (Arg2, Zero)) { Return (Buffer() { 0x03 } ) }\n
#    Return (Package() { "built-in", Buffer() { 0x01 }, })\n
#}
#end;


into method label _DSM parent_adr 0x001D0000 remove_entry;
into device name_adr 0x001D0000 insert
begin
Method (_DSM, 4, NotSerialized)\n
{\n
    If (LEqual (Arg2, Zero)) { Return (Buffer() { 0x03 } ) }\n
    Return (Package()\n
    {\n
        "AAPL,current-available", 2100,\n
        "AAPL,current-extra", 2700,\n
        "AAPL,current-extra-in-sleep", 2700,\n
        "AAPL,max-port-current-in-sleep", 2100,\n
        "AAPL,device-internal", 0x02,\n
    })\n
}
end;

into method label _DSM parent_adr 0x001A0000 remove_entry;
into device name_adr 0x001A0000 insert
begin
Method (_DSM, 4, NotSerialized)\n
{\n
    If (LEqual (Arg2, Zero)) { Return (Buffer() { 0x03 } ) }\n
    Return (Package()\n
    {\n
        "AAPL,current-available", 2100,\n
        "AAPL,current-extra", 2700,\n
        "AAPL,current-extra-in-sleep", 2700,\n
        "AAPL,max-port-current-in-sleep", 2100,\n
        "AAPL,device-internal", 0x02,\n
    })\n
}
end;

into method label _DSM parent_adr 0x001F0003 remove_entry;
into device name_adr 0x001F0003 insert
begin
Device (BUS0)\n
{\n
    Name (_CID, "smbus")\n
    Name (_ADR, Zero)\n
    Device (DVL0)\n
    {\n
        Name (_ADR, 0x57)\n
        Name (_CID, "diagsvault")\n
        Method (_DSM, 4, NotSerialized)\n
        {\n
            If (LEqual (Arg2, Zero)) { Return (Buffer() { 0x03 } ) }\n
            Return (Package() { "address", 0x57 })\n
        }\n
    }\n
}
end;

# add missing IMEI device
into device label IMEI parent_label PCI0 remove_entry;
into device label PCI0 insert
begin
Device (IMEI)\n
{\n
    Name (_ADR, 0x00160000)\n
}\n
end;
